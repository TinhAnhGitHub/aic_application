defaults:
  - hydra: default
  - _self_

hydra:
  searchpath:
    - file://conf/

mount_dir: /mnt/fangkai_blob/
data_path_prefix: ${mount_dir}/share/
model_path_prefix: ${mount_dir}/share/models # ../pretrained-models/
output_path_prefix: ${mount_dir}/reward_modeling/

train_file:
dev_file:
test_file: ${data_path_prefix}/MetaMath/data/test/MATH_test.json

port: 6000
model:

sampling_params:
  _target_: vllm.SamplingParams
  n: 1
  temperature: 0.0
  max_tokens: 4096
  stop: [ "<eos>", "\n\n\n\n", "### Instruction", "<｜end▁of▁sentence｜>", "</s>", "<pad>" ]
  top_p: 1.0

tem: ${sampling_params.temperature}
n: ${sampling_params.n}
top_p: ${sampling_params.top_p}
split_size: 1
split_id: 0
max_num_seqs: 128

suffix: ${split_id}-of-${split_size}
output_file: ${output_dir}/${eval_sub_path}/math/math.test.v1.1.0shot.n${n}.tem${tem}.p${top_p}.${suffix}.json
flush_file: ${output_file}l

apply_chat_template: False
add_generation_prompt: True

read_tensor:
  _target_: data.combine_dataset.ResponseAlignDataset
  aligner:
    _target_: data.math.math_gold_answer_extractor_deepseek
    kv_mapping:
      instruction: question
  template: "User: {question}\nPlease reason step by step, and put your final answer within {instruction}.\n\nAssistant:"
  instruction: "\\boxed{}"  # Hack here! because {} wil report error.
  split_size: ${split_size}
  split_id: ${split_id}
  service_based: False
  service_processor:
    _target_: data.vllm.VLLMRequestGenerator
    api_url: http://0.0.0.0:${port}/v1/completions
    max_tokens: ${sampling_params.max_tokens}
    model: ${model}
    stop: ${sampling_params.stop}
    n: ${n}
    temperature: ${tem}
    top_p: ${top_p}
  index_field: "idx"


save_best: False
step:
exp_name:
exp_notes:
output_dir: ${model_path_prefix}/mathstral-7B-v0.1/
eval_sub_path: ""

# Dataloader
num_workers: 48
prefetch_factor: 2

dp_size:
tp_size: 1
pp_size: 1


post_process:
#  _target_: post_processors.openai_api_callback.OpenAIMATHCallBack
  _target_: post_processors.openai_api_callback.DeepSeekMathCallBack
  output_file: ${output_file}
#  answer_clean:
#    _target_: data.math.math_boxed_answer_cleaner_proxy
  eval_fn: math
  answer_clean: math
  resume: False
  index_field: "idx"
  label_field: "label"
  saved_keys: [ "question", "output" ]

# Training hyper-parameters
per_gpu_train_batch_size: 1
per_gpu_eval_batch_size: 1

ddp_eval: False
no_cuda: False
seed: 42
local_rank: -1

# Temporary variables
fp16: True
fp16_bfloat16: True
n_gpu: 1
device:
train_batch_size:
eval_batch_size:
world_size:
