defaults:
  - hydra: default
  - _self_

hydra:
  searchpath:
    - file://conf/

data_path_prefix: /mnt/fangkai_blob/share/dataset/
model_path_prefix: /mnt/fangkai_blob/share/models # ../pretrained-models/
output_path_prefix: /mnt/fangkai_blob/reward_modeling/

#train_file: ${data_path_prefix}/magicoder/oss-instruct-apps-train-pseudo-test-inputs.v1.0.json
train_file: /mnt/fangkai_blob/share/xCodeEval/xcode_train_4o_test_inputs_v1.json
dev_file: ${train_file}
test_file: ${train_file}

port: 6000
model: ds-coder-v1.5-chat

sampling_params:
  _target_: vllm.SamplingParams
  n: 10
  temperature: 1.0
  stop: [ "</s>", "\n\n\n\n", "Context:\n", "Thought 42:", "<|end_of_text|>", "<|eot_id|>, <|EOT|>" ]
  max_tokens: 4096

tem: ${sampling_params.temperature}
n: ${sampling_params.n}
split_size: 16
split_id: 0
max_num_seqs: 64
global_batch_size: 512

suffix: ${split_id}-of-${split_size}
#output_file: ${output_dir}/oss-instruct-apps-train/${eval_sub_path}/train.0shot.tem${tem}.n${n}.${suffix}.v2.0.json
output_file: ${output_dir}/xcode-train/${eval_sub_path}/train.0shot.tem${tem}.n${n}.${suffix}.v2.0.json
flush_file: ${output_file}l

apply_chat_template: False
add_generation_prompt: True

chat_prefix: "<｜begin▁of▁sentence｜>You are an AI programming assistant, utilizing the Deepseek Coder model, developed by Deepseek Company, and you only answer questions related to computer science. For politically sensitive questions, security and privacy issues, and other non-computer science questions, you will refuse to answer\n### Instruction:\n"
chat_connect: "\n### Response:\n"
chat_suffix: "\n<|EOT|>"
prompt:
  _target_: data.input_utils.read_text
  file_path: prompts/apps/r2c_prompt_0shot_v1.0.txt


# Data loading
read_tensor:
  _target_: data.combine_dataset.ResponseAlignDataset
  read_fn:
    _target_: data.apps.PseudoInputsWithFunctionName
    use_starter_code: True
  template:
    _target_: data.input_utils.compose_template
    units:
      chat_prefix: ${chat_prefix}
      prompt: ${prompt}
      chat_connect: ${chat_connect}
    composition: "{chat_prefix}{prompt}{chat_connect}"
  instruction:
  index_field: "problem_id"
  service_based: False
  split_size: ${split_size}
  split_id: ${split_id}
  max_data_num: -1
  flush_file: ${flush_file}

exp_name:
save_best: False
eval_sub_path:
output_dir: ${output_path_prefix}experiments/${exp_name}/

# Dataloader
num_workers: 32
prefetch_factor: 2

dp_size:
tp_size: 1
pp_size: 1

post_process:
  _target_: post_processors.code.code.CodeExtractor
  output_file: ${output_file}
  answer_clean:
    _target_: post_processors.code.clean.get
#    name: standard
    name: tag
  index_field: problem_id
  resume: True
  test_case_field:
  evaluator:
    _target_: post_processors.code.code.APPsEvaluator
  saved_keys: [ "problem_id", "input_output", ]

# Training hyper-parameters
per_gpu_train_batch_size: 1
per_gpu_eval_batch_size: 1

ddp_eval: False
no_cuda: False
seed: 42
local_rank: -1

# Temporary variables
fp16: True
fp16_bfloat16: True
n_gpu: 1
device:
train_batch_size:
eval_batch_size:
world_size: