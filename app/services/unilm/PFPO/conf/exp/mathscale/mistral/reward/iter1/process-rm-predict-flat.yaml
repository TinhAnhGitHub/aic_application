defaults:
  - hydra: default
  #  - deepspeed@ds_cfg: train_hybrid_engine_zero3
  - deepspeed@ds_cfg: train_hybrid_engine_zero1_cosine
  - _self_  # see here for more details: https://hydra.cc/docs/tutorials/basic/your_first_app/defaults/#composition-order-of-primary-config

hydra:
  searchpath:
    - file://conf/

mount_dir: /mnt/fangkai_blob/
data_path_prefix: ${mount_dir}/share/
model_path_prefix: ${mount_dir}/share/models
output_path_prefix: ${mount_dir}/reward_modeling/

global_split_id: 0
train_file:
dev_file:
test_file: ${model_path_prefix}/mathstral-7B-v0.1/mathscale4o/train.500k.de_con.v1.0.boxed.${global_split_id}-of-20.json

torch_dtype:
  _target_: general_util.training_utils.return_torch_dtype
  dtype: float16 # bfloat16

tokenizer_init:
  _target_: general_util.tokenization_utils.init_tokenizer
  tokenizer_path: ${model_name_or_path}
  padding_side: left
  pad_token: "</s>"

device_map:
  _target_: models.utils.return_single_device_map

model:
  _target_: models.mistral.MistralForSequenceClassificationForEval.from_pretrained
  gradient_checkpointing: True
  attn_implementation: "sdpa" # "flash_attention_2"
  torch_dtype: ${torch_dtype}
  pad_token_id: 2
#  device_map: ${device_map}

chat_prefix: "{question}\n\nPlease put your final answer within {instruction}."
split_id: 0
split_size: 6

read_tensor:
  _target_: data.combine_dataset.MultiMappingDataset
  aligner:
    _target_: data.input_aligner.concat_aligner
    aligners:
      - _target_: data.input_aligner.field_extract_aligner
        input_index_field: id
        extract_index_field: id
        extract_fields: [ "response", "pred" ]
        extra_file: ${output_path_prefix}/experiments/mathstral.mathscale4o.process-dpo.iter0.V100.tp8dp48.v2.2.fix.s42/checkpoint-600/mathscale4o/500k-split-${global_split_id}-of-20/train.500k.de_con.boxed.v1.0.${global_split_id}-of-20.0shot.n90.tem1.0.p0.9.json
      - _target_: data.input_aligner.flat_aligner
        input_index_field: id
        extract_field: [ "response", "pred" ]
        mode: "multi"
  instruction: "\\boxed{}"  # Hack here! because {} wil report error.
  template:
    prompt: ${chat_prefix}
    input: ${chat_prefix}{response}
  index_field: id
  kv_mapping:
    id: index
    prompt: prompt
    input: chosen
    response: response
  split_size: ${split_size}
  split_id: ${split_id}


dist_load_data_barrier: False

extended_vocab:

# Data collator
collator:
  _target_: data.general_collator.StepEndingsCollator
  tokenizer: ${tokenizer_init}
  max_seq_length: 3072

# Dataloader
num_workers: 8
prefetch_factor: 2

# Wiki path pretrain v8.2
model_name_or_path: ${model_path_prefix}/deepseek-math-7b-instruct
pretrain:
resume:

dp_size:
tp_size: 1
pp_size: 1


exp_name: deepseek-math-ins.7b.meta_math.sub_math.pair-rm.gd.A100.w4.v1.0.s${seed}
exp_notes:
output_dir: ${output_path_prefix}experiments/${exp_name}  # Fix <pad token id>


do_train: False
evaluate_during_training: True

do_eval: True
eval_sub_path: checkpoint-2000 # checkpoint-1000

# Training hyper-parameters
per_gpu_train_batch_size: 8
per_gpu_eval_batch_size: 8
#learning_rate: 1e-4
learning_rate: 5e-6
#learning_rate: 2e-5
gradient_accumulation_steps: 8
weight_decay: 0.1
adam_epsilon: 1e-6
adam_betas: "(0.9, 0.98)"
#adam_betas: "(0.9, 0.999)"
#max_grad_norm: 0.0
total_dataset_len: -1
max_grad_norm: 1.0
num_train_epochs: 1
max_steps: 0
warmup_proportion: 0.1
warmup_steps: 0

# Optimizer
optimizer:
use_nvlamb:
bit_training:

logging_steps: 5
save_ds_state: False
save_steps: 100
save_best: False
eval_steps: 100
ddp_eval: True
no_cuda: False
seed: 42
local_rank: -1
fp16: True
fp16_opt_level: O1
fp16_bfloat16: True

# Prediction config
prediction_cfg:
  metric: "acc"
  measure: 1
  best_checkpoint:
  best_result:
eval_forward_fn:
  _target_: general_util.evaluator.DefaultForwardFn
post_process:
  _target_: post_processors.dpo.ResponseProcessRewardPostProcessorV2
  reduction: min
  prob_labels: "(1,)"
#predict_dir: ${output_dir}/mathstral.mathscale4o.pdpo.iter0.v2.2.s42.ckpt-600.mathscale4o.500k.global-${global_split_id}-local-${split_id}/
predict_dir: ${output_dir}/mathstral.mathscale4o.pdpo.iter0.v2.2.s42.ckpt-600.mathscale4o.500k.global-${global_split_id}-of-20-local-${split_id}-of-${split_size}/


ds_cfg:
  train_micro_batch_size_per_gpu: ${per_gpu_train_batch_size}
  gradient_accumulation_steps: ${gradient_accumulation_steps}
  optimizer:
    type: AdamW
    params:
      lr: ${learning_rate}
      betas: [ 0.9, 0.95 ]
      weight_decay: ${weight_decay}
  steps_per_print: 1
#  bf16:
#    enabled: False
#  fp16:
#    enabled: True
#    auto_cast: False
#    loss_scale: 0
#    initial_scale_power: 16
#    loss_scale_window: 1000
#    hysteresis: 2
#    consecutive_hysteresis: False
#    min_loss_scale: 1
#  zero_optimization:
#    offload_optimizer:
#      device: cpu
#      pin_memory: True


summary_helper:
  _target_: general_util.tensorboard_helper.WandbWriter
  batch_index_or_keys:
  outputs_index_or_keys:

# Temporary variables
n_gpu:
device:
train_batch_size:
eval_batch_size:
world_size:
